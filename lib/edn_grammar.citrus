grammar EDNGrammar
  # TODO
  # - characters
  # - strings
  # - regexp
  # - comments and discards

  rule value
    tagged_value | base_value
  end

  rule tagged_value
    tag ws+ base_value
  end

  rule base_value
    map |
    vector |
    list |
    set |
    float |
    integer |
    boolean |
    nil |
    keyword |
    symbol
  end

  rule map
    '{' ws* (base_value base_value)* '}' ws*
  end

  rule set
    '#{' ws* base_value* '}' ws*
  end

  rule vector
    '[' ws* base_value* ']' ws*
  end

  rule list
    '(' ws* base_value* ')' ws*
  end

  rule integer
    '-'?
    ('0' | [1-9][0-9]*)
    'N'? ws*
  end

  rule float
    '-'?
    ('0' | [1-9][0-9]*)
    ('.' [0-9]+)
    ([eE] [+-]? [0-9]+)?
    'M'?
    ws*
  end

  rule boolean
    "true" | "false"
  end

  rule nil
    "nil"
  end

  rule keyword
    ':' symbol_chars ('/' symbol_chars)? ws*
  end

  rule symbol
    (symbol_chars ('/' symbol_chars)? | '/') ws*
  end

  rule tag
    '#' symbol_chars ('/' symbol_chars)?
  end

  rule symbol_chars
    (/[[[:alnum:]]\*\+\!\_\?/ /[[[:alnum:]]\.\*\+!\-_\?\:\#]/*) |
    ([\-\.] [[[:alpha:]]\.\*\+!\-_\?\:\#] /[[[:alnum:]]\.\*\+!\-_\?\:\#]/*)
  end

  rule ws
    [ \t\r\n,]
  end
end
